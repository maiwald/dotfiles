# vim: ft=sh

alias please='sudo'

# neovim
alias vim='nvim'
alias vi='nvim'

# ls
alias ls='ls -G'
alias la='ls -lAh'

# git
alias ga='git add -A'
alias gap='git add -A -p'
alias gb='git b'
alias gci='git commit'
alias gco='git checkout'
alias gd='git diff --find-copies'
alias gds='git diff --staged --find-copies'
alias gg='git g -n 20 | tail -n 100'
alias gp='git pull --rebase --autostash'
alias gpp='git pull --rebase --autostash && git push'
alias grc='git rebase --continue'
alias gst='git status'
alias gcof='git checkout $(git branch | fzf)'
alias gbd='git branch -d $(git branch | fzf)'

function gm {
  git rev-parse --verify main &> /dev/null
  if [ $? -eq 0 ]; then
    git checkout main
  else
    git checkout master
  fi
}

function gri {
  local BRANCH
  if [ $# -eq 1 ]; then
    BRANCH=$1
  else
    git rev-parse --verify main &> /dev/null
    if [ $? -eq 0 ]; then
      BRANCH=origin/main
    else
      BRANCH=origin/master
    fi
  fi
  git rebase --interactive --autostash --autosquash $BRANCH
}

function gcif {
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  if [ $current_branch = "master" ] || [ $current_branch = "main" ]; then
    commit=$(git log -n 20 --oneline --decorate | fzf | cut -d " " -f 1)
  else
    git rev-parse --verify main &> /dev/null
    if [ $? -eq 0 ]; then
      commit=$(git log origin/main..HEAD --oneline --decorate | fzf | cut -d " " -f 1)
    else
      commit=$(git log origin/master..HEAD --oneline --decorate | fzf | cut -d " " -f 1)
    fi
  fi

  gci --fixup $commit
}

function ghc() {
  if [ $# -eq 1 ]; then
    git clone git@github.com:"$1".git
  fi
}

function gru() {
  read "reply?Reset to upstream, are you sure? "
  if [[ "$reply" =~ ^[Yy]$ ]]
  then
    git fetch && git reset --hard @{u}
  fi
}


# ruby
alias b='bundle exec'
alias be='b'
alias RAT='RAILS_ENV=test RACK_ENV=test'

# brew
alias brupdate='brew update && brew outdated'
alias brupgrade='brew upgrade && brew cleanup'

# tmux
alias tmuy='tmux'

if ! [ -x "$(command -v pbcopy)" ]; then
  alias pbcopy='xsel -bi'
  alias pbpaste='xsel -bo'
fi

function mk() {
  if [ $# -eq 1 ]; then
    mkdir $1 && cd $1
  fi
}

function hide_desktop() {
  defaults write com.apple.finder CreateDesktop false
  killall Finder
}

function show_desktop() {
  defaults write com.apple.finder CreateDesktop true
  killall Finder
}
